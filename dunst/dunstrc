[global]
    ### Display ###
    monitor = 0

    # mouse: keyboard: none
    follow = mouse

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    geometry = "400-5+26"

    # Progress bar
    progress_bar = true
    progress_bar_height = 15
    progress_bar_max_width = 320
    progress_bar_min_width = 240
    progress_bar_frame_width = 7

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.  Will be ignored if
    # width is 0.
    shrink = yes

    # The transparency of the window.  Range: [0; 100].
    transparency = 0

    # The height of the entire notification.
    notification_height = 100

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 1

    # Padding between text and separator.
    padding = 10

    # Horizontal padding.
    horizontal_padding = 10

    # Horizontal padding.
    text_icon_padding = 15

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 0

    # Defines color of the frame around the notification window.
    frame_color = "#81b622"

    # Define a color for the separator.
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = "#333"

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # Set to 0 to disable.
    idle_threshold = 120

    # Wayland layer
    layer = overlay

    # Force X11 (Wayland)
    force_xwayland = false

    ### Text ###

    font = "Space Mono 10"

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 2

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<i>%a</i>\n<b>%s</b> %p\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left
    # Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 300

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = false

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = false

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = true

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 64
    min_icon_size = 16

    # Paths to default icons.
    # icon_path = /usr/share/icons/Papirus-Dark/24x24/panel/:/usr/share/icons/Papirus-Dark/24x24/devices/:/usr/share/icons/Papirus-Dark/24x24/apps:/usr/share/icons/Papirus-Dark/24x24/actions
    icon_path = /usr/share/icons/Flat-Remix-Blue-Dark/apps/scalable

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/bin/rofi -dmenu -p dunst -theme qtile-dynamic-clear -no-show-icons
    # Browser for opening urls in context menu.
    browser = /usr/bin/brave

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = false

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Print a notification on startup.
    startup_notification = false

    #  crit: Critical features. Dunst aborts
    #  warn: Only non-fatal warnings
    #  mesg: Important Messages
    #  info: all unimportant stuff
    # debug: all less than unimportant stuff
    verbosity = mesg

    # Define the corner radius of the notification window
    corner_radius = 10

    ### Legacy
    # Use the Xinerama extension instead of RandR for multi-monitor support.
    force_xinerama = false

#    ### mouse
#    # Possible values are:
#    # * none * do_action * close_current * close_all
    mouse_left_click = close_current
    mouse_middle_click = do_action
    mouse_right_click = close_all

    ignore_dbusclose = false

[experimental]
    per_monitor_dpi = false`

[shortcuts]
    # Close notification.
    close = ctrl+space

    # Close all notifications.
    close_all = ctrl+shift+space

    # Redisplay last message(s).
    history = ctrl+grave

    # Context menu.
    context = shift+space

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#222"
    foreground = "#f5f5dc"
    frame_color = "#9F2"
    timeout = 8
    # Icon for notifications with low urgency, uncomment to enable
    icon = /usr/share/icons/Flat-Remix-Green-Dark/apps/scalable/

[urgency_normal]
    background = "#222"
    foreground = "#fff0f5"
    frame_color = "#FE4"
    timeout = 12
    # Icon for notifications with normal urgency, uncomment to enable
	icon = /usr/share/icons/Flat-Remix-Orange-Dark/apps/scalable/

[urgency_critical]
    background = "#333"
    foreground = "#faebd7"
    frame_color = "#FA8"
    timeout = 15
    # Icon for notifications with critical urgency, uncomment to enable
    icon = /usr/share/icons/Flat-Remix-Red-Dark/apps/scalable/

# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body|category|desktop_entry|icon|match_transient|msg_urgency|
#    stack_tag|summary
#
# and you can override the
#    background|foreground|format|frame_color|fullscreen|new_icon|
#    set_stack_tag|set_transient|timeout|urgency
#
# Shell-like globbing will get expanded.
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# SCRIPTING
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
[transient_history_ignore]
    match_transient = yes
    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window
#       opened
# delay: displays the new notification, if there is no fullscreen window
#        active if the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the
#           notification will get withdrawn from screen again and will get
#           delayed like a new notification
[fullscreen_delay_everything]
    fullscreen = pushback

[fullscreen_show_critical]
    msg_urgency = critical
    fullscreen = show

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
# SOUND FOR ALL SCRIPT
[pop-up]
    summary="*"
    script =~/.config/dunst/scripts/notify

# NETWORK MANAGER
[nm-connect]
    appname = "NetworkManager"
    summary = "*Established*"
    format = "%b"
    timeout = 5
    set_stack_tag = "nm"

[nm-disconnect]
    appname = "NetworkManager"
    summary = "*Disconnected*"
    format = "%b"
    timeout = 5
    set_stack_tag = "nm"

# NETWORKD-WIRED
[networkd-connect]
    appname = "networkd"
    body = "*online*"
    format = "<b>%s</b>\n%b"
    timeout = 5
    new_icon = network-wired
    set_stack_tag = "networkd-wired"

[networkd-disconnect]
    appname = "networkd"
    body = "disconnected"
    format = "<b>%s</b>\n%b"
    timeout = 5
    new_icon = network-wired-disconected
    set_stack_tag = "networkd-wired"

[networkd-offline]
    appname = "networkd"
    body = "offline"
    format = "<b>%s</b>\n%b"
    timeout = 5
    new_icon = network-offline
    set_stack_tag = "networkd-wired"

# NETWORKD-WIRELESS
[networkd-connect-w]
    appname = "networkd"
    summary = "wlan0"
    body = "*online*"
    format = "<b>%s</b>\n%b"
    timeout = 5
    new_icon = network-wireless
    set_stack_tag = "networkd-wireless"

[networkd-disconnect-w]
    appname = "networkd"
    summary = "wlan0"
    body = "disconnected"
    format = "<b>%s</b>\n%b"
    timeout = 5
    new_icon = network-wireless-disconnected
    set_stack_tag = "networkd-wireless"

[networkd-offline-w]
    appname = "networkd"
    summary = "wlan0"
    body = "offline"
    format = "<b>%s</b>\n%b"
    timeout = 5
    new_icon = nm-no-connection
    set_stack_tag = "networkd-wireless"

[networkd-configuring-w]
    appname = "networkd"
    body = "configuring*"
    format = "<b>%s</b>\n%b"
    timeout = 5
    history_ignore=true
    new_icon = network-modem
    set_stack_tag = "networkd-wireless"

# Whatsapp
[whatsapp-web]
    body = "*web.whatsapp.com*"
    set_stack_tag = "whatsapp"

[whatsapp-kde]
    summary = "WhatsApp"
    set_stack_tag = "whatsapp"
    new_icon = whatsapp

# vim: ft=cfg
